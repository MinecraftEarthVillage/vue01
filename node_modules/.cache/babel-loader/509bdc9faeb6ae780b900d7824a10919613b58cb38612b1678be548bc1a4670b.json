{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Vue3生命周期钩子函数\", -1 /* HOISTED */)), _createElementVNode(\"h2\", null, \"响应式拦截数据data的值是：\" + _toDisplayString(_ctx.msg), 1 /* TEXT */), _createElementVNode(\"p\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.changeMsg && _ctx.changeMsg(...args))\n  }, \"点击改变msg\")])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","_ctx","msg","onClick","_cache","args","changeMsg"],"sources":["C:\\Users\\Administrator\\Desktop\\vue01\\src\\components\\test12-1.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Vue3生命周期钩子函数</h1>\r\n        <h2>响应式拦截数据data的值是：{{ msg }}</h2>\r\n        <p><button @click=\"changeMsg\">点击改变msg</button></p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted, onUnmounted, onUpdated, reactive, toRefs } from 'vue';\r\nexport default {\r\n    setup() {//初始化项目工作都放在setup中\r\n        console.log('当前应用程序被安装了');\r\n        const state = reactive({//定义状态\r\n            msg: '学而时习之',//定义变量\r\n            changeMsg: () => {//定义方法\r\n                state.msg = '不亦说乎'\r\n            }\r\n        })\r\n        let timer = 0;\r\n        let count = 0;\r\n        onMounted(() => {\r\n            console.log('页面挂载完成，触发了onMounted钩子函数');\r\n            timer = setInterval(() => {\r\n                console.log('定时器正在运行中', count++)\r\n            }, 1000)\r\n        })\r\n        onUpdated(() => {\r\n            console.log('数据发生了更新，触发了onUpdated钩子函数')\r\n        })\r\n        onUnmounted(() => {\r\n            console.log('页面、组件退出，触发了onUnmounted钩子函数')\r\n            //如果不清除，这些异步的行为就会常驻在内存中，一定程度上会造成常驻内存的不必要消耗，造成内存泄漏\r\n            clearInterval(timer);\r\n        })\r\n        return{...toRefs(state)}\r\n    }\r\n}\r\n</script>\r\n\r\n<style></style>"],"mappings":";;uBACIA,mBAAA,CAIM,c,0BAHFC,mBAAA,CAAqB,YAAjB,cAAY,sBAChBA,mBAAA,CAAiC,YAA7B,iBAAe,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,GAAG,kBACzBH,mBAAA,CAAkD,YAA/CA,mBAAA,CAA2C;IAAlCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,IAAA,CAAAK,SAAA,IAAAL,IAAA,CAAAK,SAAA,IAAAD,IAAA,CAAS;KAAE,SAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}