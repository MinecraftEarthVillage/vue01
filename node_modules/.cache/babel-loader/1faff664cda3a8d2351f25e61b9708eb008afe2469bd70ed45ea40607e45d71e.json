{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\" 前期所需要的知识\" + _toDisplayString(_ctx.myid) + \":\" + _toDisplayString(_ctx.mytext) + \" \", 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createTextVNode","_toDisplayString","_ctx","myid","mytext","_createElementVNode"],"sources":["C:\\Users\\Administrator\\Desktop\\vue01\\src\\components\\ChildComp.vue"],"sourcesContent":["<template>\r\n    前期所需要的知识{{myid}}:{{mytext}} <br>\r\n    </template>\r\n    <script>\r\n    import { reactive, toRefs } from 'vue'\r\n    export default {\r\n    props:['title','id'],\r\n    setup (props) {\r\n    const state = reactive({\r\n    mytext:props.title,\r\n    myid:props.id\r\n    })\r\n    return {\r\n    ...toRefs(state),\r\n    }\r\n    }\r\n    }\r\n    </script>\r\n    "],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,SAAAC,gBAAA,CAAU,WACE,GAAAC,gBAAA,CAAEC,IAAA,CAAAC,IAAI,IAAE,GAAC,GAAAF,gBAAA,CAAEC,IAAA,CAAAE,MAAM,IAAE,GAAC,iB,0BAAAC,mBAAA,CAAI,qC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}